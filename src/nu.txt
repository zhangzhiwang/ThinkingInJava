1.p51
2.p52 exercice11
3.p105 第一段代码以及thinkingInJava中chapter5中的Test26-Test29
4.p123第一段在jdk1.8下测试与原文不符
5.关于对象属性初始化
7.清理对象时，最好使用自己编写的清理方法（比如dispose），不要使用finalize()，finalize()不确定会不会被调用以及什么时候会被调用，why？
8.构造方法里面调用多太方法，为什么会执行子类覆盖的方法而非父类的方法，参考《构造器内部多态方法的行为研究》看能不能找到答案
9.有关枚举的继承和实现
10.适配器模式
11.p185 看完内部类之后再看9.8
12.看完第13章回过头再来看p181 9.6和后面的练习16
13.p191练习1上面一句话与实际测试不符，测试代码为com.asiainfo.chapter10.Test1
14.com.asiainfo.chapter10.Test2  why?
15.优先使用类而不是接口 p201练习16上面一句话 why?
16.抽象类有构造器但是不能实例化
17.foreach的原理
18.Random与Math.random()
19.解释com.asiainfo.chapter11.Test22抛异常的原因。可参考课本p226练习7以及The_Thinking_in_Java_Annotated_Solution_Guide(TIJ4-solutions)p187
20.foreach的原理是迭代器，可参考http://blog.csdn.net/a596620989/article/details/6930479
21.com.asiainfo.chapter11.Test26对于LinkedHashMap测试结果的顺序貌似不正确
22、优先级队列在添加元素的时候会排序，但是添加完元素之后直接打印优先级队列并没有排序，why？
23、栈是后进先出，直接打印栈或者用get()的方式打印，元素输出顺序貌似不符合后进先出，详见Test69
24、System.out与System.err，可以参考com.asiainfo.chapter12.Test5
25、看一下p261代码是干什么的，当时没怎么看
26、父类构造器里面调用子类构造器，初始化顺序
27、为什么要区分受检异常和运行时异常，运行时异常为什么不强制处理
28、p276 12.12 其他可选方式  想要表达什么意思？对于受检异常在编译时强制进行处理的机制会流于形式化？强制程序员去处理他不会处理的异常，会逼程序员编写欺骗编译器的代码从而既不用处理异常也能编译通过？java没有强制去try/catch啊，不会处理可以throw出去啊，为什么要把受检异常转换成运行时异常，然后在调用方法里面再把它拆开？？？
29、如何解释com.asiainfo.chapter13.Test2
30、再循环里面String拼接操作的效率要小于StringBuilder的append()方法的效率，不在循环下呢？
31、com.asiainfo.chapter13.Test7第31行打印结果为什么会是乱码？
32、查看String的compareTo()方法的源码，其中offset是什么？
33、如何解释com.asiainfo.chapter13.Test8，为什么String是不可变的，通过javap -c能看出来吗？   就是p289第一段：从这个表可以看出
34、String的intern()方法
35、转义符与正则表达式，p296第一段什么意思，为什么是四个\，1~4个\分别代表什么意思  可参考Pattern的jdk api
36、p296中间(-|\\+)?为什么可以表示两者都没有
37、p299 13.6.3没看懂



underline:
在合适的位置写上：自定义异常（直接继承自Exception）属于受检异常，继承自RuntimeException的属于运行时异常
练习25旁边写上：对与方法覆盖，子类不能抛出比父类更多的异常就是为了保证多态。方法的调用方不能比被调用方抛出更少的异常，子类的构造方法不能比所调的那个父类构造方法所抛异常少就是这个道理。
对于继承的情况，无论是普通方法还是构造方法，对于异常抛出的规定都遵循一个原则：在调用子类的方法（包括构造方法）时，所有可能出现的受检异常都能被捕获到
11.12下面第一段：开发异常处理系统的原因是。。。段尾         第2、3、4段全部勾上  第5段都一句话就行
p277倒数第二段异常说明及其意思
Exception是所有受检异常的基类，异常层次结构图
12.12下面吞食则有害原则
13.2上面 对于一个方法而言 这句话勾上并在旁边写上：方法就是一个动作，干一件事，好比做一道菜，参数就相当于做菜的原料，计算结果就好像最后炒完的那盘菜。对于原料而言，在烹饪的过程中可能改变其颜色，内涵水分，味道等等，但炒完后原料还是它自己（比如鸡蛋还是鸡蛋）
p284第二段 重载的意思是...
p285前两段勾上
p284汇编旁边写上：字符串拼接的实现原理以及为什么StringBuilder的append()方法的效率要高于字符串的拼接
p286最后一句：如果你想走捷径...
p287第3、4段
p288把regionMatcher()改成regionMatches()
p297第1、2、3段勾上
13.6.2那几张表画上重点符号
p300第一段最后一句：多数正则表达式