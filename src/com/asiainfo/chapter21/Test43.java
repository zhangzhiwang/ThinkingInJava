package com.asiainfo.chapter21;

/**
 * IntGenerator
 * 
 * @author zhangzw8
 * @date 2016年3月29日 上午9:34:27
 */
public class Test43 {
	
}

class IntGenerator {
private volatile boolean isCanceled;//默认为false
	
	public int next() {
		return 0;
	}
	
	public void cancel() {
		isCanceled = true;
	}
	
	public boolean isCanceled() {//属性的方法可以同名，但不建议这么做
		return isCanceled;
	}
}

class EvenChecker implements Runnable {
	private IntGenerator intGenerator;

	private EvenChecker(IntGenerator ig) {
		super();
		this.intGenerator = ig;
	}

	private EvenChecker() {
		super();
	}
	
	@Override
	public void run() {
		while(!intGenerator.isCanceled()) {
			int i = intGenerator.next();
			if(i % 2 != 0) {
				System.out.println(i + " is not even!Generated by " + Thread.currentThread().getName());
				intGenerator.cancel();
			} else {
				System.out.println(Thread.currentThread().getName() + " generates " + i);
			}
		}
	}
}